<Project Sdk="Microsoft.NET.Sdk">
	<PropertyGroup>
		<TargetFrameworks>net35;net8.0-windows</TargetFrameworks>
		<UseWindowsForms>true</UseWindowsForms>
		<OutputType>Library</OutputType>
		<AssemblyName>Plugin.WcfServer</AssemblyName>
		<RootNamespace>Plugin.WcfServer</RootNamespace>
		<Configuration>Debug</Configuration>
		<Deterministic>false</Deterministic>
		<GenerateAssemblyInfo>False</GenerateAssemblyInfo>
		<GeneratePackageOnBuild>False</GeneratePackageOnBuild>
		<GenerateDocumentationFile>False</GenerateDocumentationFile>
		<CopyLocalLockFileAssemblies>True</CopyLocalLockFileAssemblies>
		<NoWarn>CA1416</NoWarn>
	</PropertyGroup>

	<!--nuspec-->
	<PropertyGroup>
		<PackageId>AlphaOmega.SAL.Plugin.WcfServer</PackageId>
		<Version>$(Version)</Version>
		<Title>SAL Plugin WCF server</Title>
		<Description>The main purpose of this module is to remotely automate the activities of other plugins. Based on REST or SOAP protocol you can call other public member plugin loaded remotely. Stop, Start, invoke some action or collect telemetry data in working process.</Description>
		<Authors>Danila Korablin</Authors>
		<PackageLicenseExpression>Apache-1.0</PackageLicenseExpression>
		<PackageReadmeFile>docs/README.md</PackageReadmeFile>
		<PackageIcon>docs\SAL.100.png</PackageIcon>
		<PackageProjectUrl>https://github.com/DKorablin/Plugin.WcfServer</PackageProjectUrl>
		<RepositoryType>git</RepositoryType>
		<RepositoryUrl>https://github.com/DKorablin/Plugin.WcfServer</RepositoryUrl>
		<PackageTags>SAL plugin windows WCF server</PackageTags>
	</PropertyGroup>
	<ItemGroup>
		<None Include="..\README.md" Pack="true" PackagePath="\docs" />
		<None Include="..\Images.Shared\SAL.100.png" Pack="true" PackagePath="\docs" />
	</ItemGroup>

	<PropertyGroup Condition="'$(Configuration)'=='Release'">
		<Optimize>true</Optimize>
		<PublishSingleFile>true</PublishSingleFile>
		<TreatWarningsAsErrors>false</TreatWarningsAsErrors>
	</PropertyGroup>

	<ItemGroup Condition="'$(TargetFramework)' == 'net8.0-windows'">
		<AssemblyAttributes Include="AssemblyMetadata">
			<_Parameter1>ProjectUrl</_Parameter1>
			<_Parameter2>https://github.com/DKorablin/Plugin.WcfServer</_Parameter2>
		</AssemblyAttributes>
		<AssemblyAttributes Include="System.Runtime.Versioning.SupportedOSPlatform">
			<_Parameter1>Windows</_Parameter1>
		</AssemblyAttributes>
	</ItemGroup>
	
	<ItemGroup>
		<PackageReference Include="SAL.Flatbed">
			<ExcludeAssets>runtime</ExcludeAssets>
		</PackageReference>
		<PackageReference Include="Newtonsoft.Json" />
	</ItemGroup>

	<ItemGroup Condition="'$(TargetFramework)' == 'net35'">
		<Reference Include="System.Configuration" />
		<Reference Include="System.ServiceModel" />
		<Reference Include="System.ServiceModel.Web" />
		<Reference Include="System.Web" />
	</ItemGroup>

	<ItemGroup Condition="'$(TargetFramework)' == 'net8.0-windows'">
		<!-- CoreWCF for server-side hosting -->
		<PackageReference Include="CoreWCF.Primitives" />
		<PackageReference Include="CoreWCF.Http" />
		<PackageReference Include="CoreWCF.WebHttp" />
		<PackageReference Include="CoreWCF.NetNamedPipe" />
		<PackageReference Include="Microsoft.Extensions.Hosting" />
		<!-- System.ServiceModel for client-side -->
		<PackageReference Include="System.ServiceModel.Primitives" />
		<PackageReference Include="System.ServiceModel.Http" />
		<PackageReference Include="System.ServiceModel.NetNamedPipe" />
		<PackageReference Include="System.Configuration.ConfigurationManager" />
	</ItemGroup>

	<!-- Exclude assemblies from copy to output binary folder -->
	<Target Name="ExcludeSystemAssemblies" AfterTargets="ResolveReferences">
		<ItemGroup>
			<ReferenceCopyLocalPaths Remove="@(ReferenceCopyLocalPaths)" Condition="$([System.String]::Copy('%(Filename)').StartsWith('System.'))" />
			<ReferenceCopyLocalPaths Remove="@(ReferenceCopyLocalPaths)" Condition="$([System.String]::Copy('%(Filename)').StartsWith('Microsoft.Win32.'))" />
		</ItemGroup>
	</Target>
</Project>